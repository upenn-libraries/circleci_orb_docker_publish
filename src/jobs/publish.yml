description: Check, build, and optionally deploy a Docker image.

executor: << parameters.executor >>

parameters:
  executor:
    description: Image to use for running the Docker build. Defaults to docker/docker.
    type: executor
    default: docker/docker
  dockerfile:
    description: Name of dockerfile to use. Defaults to Dockerfile.
    type: string
    default: Dockerfile
  path:
    description: Path to the directory containing your Dockerfile and build context. Defaults to . (working directory).
    type: string
    default: .
  image:
    description: Name of image to create. Defaults to a combination of $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME.
    type: string
    default: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
  tag:
    description: Value for tag to use. Defaults to $CIRCLE_SHA1.
    type: string
    default: $CIRCLE_SHA1
  registry:
    description: Name of registry to use. Defaults to docker.io.
    type: string
    default: docker.io
  extra_build_args:
    description: >
      Extra flags to pass to docker build. For examples, see
      https://docs.docker.com/engine/reference/commandline/build
    type: string
    default: ""
  label_prefix:
    description: Prefix for Docker labels applied to the image. Defaults to $CIRCLE_PROJECT_USERNAME.
    type: string
    default: $CIRCLE_PROJECT_USERNAME
  after_checkout:
    description: Optional steps to run after checking out the code.
    type: steps
    default: []
  before_build:
    description: Optional steps to run before building the docker image.
    type: steps
    default: []
  after_build:
    description: Optional steps to run after building the docker image.
    type: steps
    default: []
  deploy:
    description: Whether or not to push image to a registry.
    type: boolean
    default: true

steps:
  - checkout
  - when:
      name: Run after_checkout lifecycle hook steps.
      condition: << parameters.after_checkout >>
      steps: << parameters.after_checkout >>
  - setup_remote_docker
  - when:
      condition: <<parameters.deploy>>
      steps:
        - docker/check:
            registry: << parameters.registry >>
  - when:
      name: Run before_build lifecycle hook steps.
      condition: << parameters.before_build >>
      steps: << parameters.before_build >>
  - build:
      dockerfile: << parameters.dockerfile >>
      path: << parameters.path >>
      image: << parameters.image >>
      tag: << parameters.tag >>
      registry: << parameters.registry >>
      extra_build_args: << parameters.extra_build_args >>
      label_prefix: << parameters.label_prefix >>
  - when:
      name: Run after_build lifecycle hook steps.
      condition: << parameters.after_build >>
      steps: << parameters.after_build >>
  - when:
      condition: <<parameters.deploy>>
      steps:
        - docker/push:
            registry: << parameters.registry >>
            image: << parameters.image >>
